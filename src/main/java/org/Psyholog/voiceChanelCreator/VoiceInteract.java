package org.Psyholog.voiceChanelCreator;

import io.github.cdimascio.dotenv.Dotenv;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.Guild;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.channel.concrete.TextChannel;
import net.dv8tion.jda.api.entities.channel.concrete.VoiceChannel;
import net.dv8tion.jda.api.entities.channel.middleman.AudioChannel;
import net.dv8tion.jda.api.entities.channel.unions.AudioChannelUnion;
import net.dv8tion.jda.api.events.guild.voice.GuildVoiceUpdateEvent;
import net.dv8tion.jda.api.events.interaction.ModalInteractionEvent;
import net.dv8tion.jda.api.events.interaction.component.ButtonInteractionEvent;
import net.dv8tion.jda.api.events.interaction.component.StringSelectInteractionEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;
import net.dv8tion.jda.api.interactions.components.ActionRow;
import net.dv8tion.jda.api.interactions.components.buttons.Button;
import net.dv8tion.jda.api.interactions.components.selections.SelectOption;
import net.dv8tion.jda.api.interactions.components.selections.StringSelectMenu;
import net.dv8tion.jda.api.interactions.components.text.TextInput;
import net.dv8tion.jda.api.interactions.components.text.TextInputStyle;
import net.dv8tion.jda.api.interactions.modals.Modal;
import net.dv8tion.jda.api.interactions.modals.ModalMapping;
import org.jetbrains.annotations.NotNull;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.awt.*;
import java.time.Instant;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VoiceInteract extends ListenerAdapter {
    private static final Logger logger = LoggerFactory.getLogger(VoiceInteract.class);
    private final Map<String, String> activeVoices = new HashMap<>();
    String voiceChannelId = Dotenv.load().get("voiceChannelId");
    String categoryVoiceId = Dotenv.load().get("categoryVoiceId");

    @Override
    public void onGuildVoiceUpdate(GuildVoiceUpdateEvent event) {
        Guild guild = event.getGuild();
        Member member = event.getMember();

        if (event.getChannelJoined() != null) {
            AudioChannel joinedChannel = event.getChannelJoined(); // AudioChannel - –æ–±—â–∏–π —Ç–∏–ø –¥–ª—è VoiceChannel –∏ StageChannel

            if (joinedChannel instanceof VoiceChannel) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –≥–æ–ª–æ—Å–æ–≤—ã–º –∫–∞–Ω–∞–ª–æ–º
                VoiceChannel voiceChannel = (VoiceChannel) joinedChannel;

                if (voiceChannel.getId().equals(voiceChannelId)) {
                    guild.createVoiceChannel("–ü—Ä–∏–≤–∞—Ç " + member.getEffectiveName())
                            .setParent(guild.getCategoryById(categoryVoiceId))
                            .setUserlimit(2)
                            .queue(voiceChannel1 -> {
                                guild.moveVoiceMember(member, voiceChannel1).queue();
                                activeVoices.put(voiceChannel1.getId(), member.getId());

                                // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
                                VoiceChannel textChannel = guild.getVoiceChannelById(voiceChannel1.getId());
                                if (textChannel != null) {
                                    EmbedBuilder embedBuilder = new EmbedBuilder()
                                            .setTitle("üéß –í–∞—à –ª–∏—á–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!")
                                            .setColor(new Color(72, 133, 237)) // –ö—Ä–∞—Å–∏–≤—ã–π —Å–∏–Ω–∏–π –æ—Ç—Ç–µ–Ω–æ–∫
                                            .setDescription("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º –∫–∞–Ω–∞–ª–æ–º. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –∫–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞.")
                                            .setFooter("üëë –°–æ–∑–¥–∞—Ç–µ–ª—å: " + member.getEffectiveName(), null)
                                            .setTimestamp(Instant.now());

                                    textChannel.sendMessage(member.getAsMention() + ", –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω! üî•")
                                            .setEmbeds(embedBuilder.build())
                                            .addActionRow(
                                                    Button.primary("name:" + member.getId() + ":" + voiceChannel1.getId(), "‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è"),
                                                    Button.primary("limit:" + member.getId() + ":" + voiceChannel1.getId(), "üìè –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç"),
                                                    Button.danger("kick:" + member.getId() + ":" + voiceChannel1.getId(), "‚õî –ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"),
                                                    Button.primary("closeVoice:" + member.getId() + ":" + voiceChannel1.getId(), "üîí –ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª")
                                            )
                                            .queue();
                                }
                            });
                }
            }
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã—à–µ–ª –ª–∏ –∫—Ç–æ-—Ç–æ –∏–∑ –∫–∞–Ω–∞–ª–∞
        if (event.getChannelLeft() != null) {
            VoiceChannel leftChannel = event.getChannelLeft().asVoiceChannel();

            // –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –ø—É—Å—Ç–æ–π –∏ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ activeVoices —Ç–æ –æ–Ω —É–¥–∞–ª–∏—Ç—Å—è
            if (leftChannel.getMembers().isEmpty() && activeVoices.containsKey(leftChannel.getId())) {
                leftChannel.delete().queue();
                activeVoices.remove(leftChannel.getId());
                logger.info("–£–¥–∞–ª—ë–Ω –ø—É—Å—Ç–æ–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª: " + leftChannel.getName());
            }
        }
    }

    @Override
    public void onStringSelectInteraction(StringSelectInteractionEvent event) {
        if (event.getComponentId().startsWith("kick-select:")) {
            String[] parts = event.getComponentId().split(":");
            String ownerId = parts[1]; // ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã
            String voiceId = parts[2]; // ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞

            Member member = event.getMember();
            Guild guild = event.getGuild();

            if (member == null || guild == null) return;
            if (!member.getId().equals(ownerId)) {
                event.reply("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –º–æ–∂–µ—Ç –∏—Å–∫–ª—é—á–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.").setEphemeral(true).queue();
                return;
            }

            String selectedValue = event.getValues().get(0); // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–∏–∫–∞
            String[] valueParts = selectedValue.split(":");
            String targetId = valueParts[2]; // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            Member targetMember = guild.getMemberById(targetId);
            if (targetMember == null) {
                event.reply("‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.").setEphemeral(true).queue();
                return;
            }

            AudioChannel voiceChannel = targetMember.getVoiceState().getChannel();
            if (voiceChannel == null || !voiceChannel.getId().equals(voiceId)) {
                event.reply("‚ùå –£—á–∞—Å—Ç–Ω–∏–∫ —É–∂–µ –ø–æ–∫–∏–Ω—É–ª –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.").setEphemeral(true).queue();
                return;
            }

            // –ö–∏–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ–º–µ—â–∞—è –µ–≥–æ –≤ –ø—É—Å—Ç–æ—Ç—É
            guild.kickVoiceMember(targetMember).queue(
                    success -> event.reply("‚úÖ **" + targetMember.getEffectiveName() + "** –±—ã–ª –∫–∏–∫–Ω—É—Ç –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.").queue(),
                    failure -> event.reply("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + failure.getMessage()).setEphemeral(true).queue()
            );
        }
    }

    @Override
    public void onButtonInteraction(@NotNull ButtonInteractionEvent event) {
        if (event.getButton().getId().startsWith("closeVoice:")) {
            String[] parts = event.getButton().getId().split(":");
            String ownerId = parts[1]; // ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã
            String voiceId = parts[2]; // ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            Member member = event.getMember();
            Guild guild = event.getGuild();

            if (member == null || guild == null) return;

            if (!member.getId().equals(ownerId)) {
                event.reply("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø–æ–º.").setEphemeral(true).queue();
                return;
            }

            VoiceChannel voiceChannel = guild.getVoiceChannelById(voiceId);
            if (voiceChannel == null) {
                event.reply("‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.").setEphemeral(true).queue();
                return;
            }

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤
            voiceChannel.getManager().putPermissionOverride(guild.getPublicRole(),
                    List.of(),
                    List.of(net.dv8tion.jda.api.Permission.VIEW_CHANNEL)).queue(
                    success -> {
                        event.reply("üîí –ö–∞–Ω–∞–ª —Ç–µ–ø–µ—Ä—å –∑–∞–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!").setEphemeral(true).queue();
                        event.getMessage().editMessageComponents(ActionRow.of(
                                Button.primary("name:" + member.getId() + ":" + voiceChannel.getId(), "‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è"),
                                Button.primary("limit:" + member.getId() + ":" + voiceChannel.getId(), "üìè –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç"),
                                Button.danger("kick:" + member.getId() + ":" + voiceChannel.getId(), "‚õî –ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"),
                                Button.primary("openVoice:" + ownerId + ":" + voiceId, "üîì –û—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª")
                        )).queue();
                    },
                    error -> event.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø: " + error.getMessage()).setEphemeral(true).queue()
            );
        }

        if (event.getButton().getId().startsWith("openVoice:")) {
            String[] parts = event.getButton().getId().split(":");
            String ownerId = parts[1]; // ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã
            String voiceId = parts[2]; // ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            Member member = event.getMember();
            Guild guild = event.getGuild();

            if (member == null || guild == null) return;

            if (!member.getId().equals(ownerId)) {
                event.reply("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ—Å—Ç—É–ø–æ–º.").setEphemeral(true).queue();
                return;
            }

            VoiceChannel voiceChannel = guild.getVoiceChannelById(voiceId);
            if (voiceChannel == null) {
                event.reply("‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.").setEphemeral(true).queue();
                return;
            }

            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –≤—Å–µ—Ö
            voiceChannel.getManager().putPermissionOverride(guild.getPublicRole(),
                    List.of(net.dv8tion.jda.api.Permission.VIEW_CHANNEL),
                    List.of()).queue(
                    success -> {
                        event.reply("üîì –ö–∞–Ω–∞–ª —Ç–µ–ø–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –≤—Å–µ—Ö!").setEphemeral(true).queue();
                        event.getMessage().editMessageComponents(ActionRow.of(
                                Button.primary("name:" + member.getId() + ":" + voiceChannel.getId(), "‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è"),
                                Button.primary("limit:" + member.getId() + ":" + voiceChannel.getId(), "üìè –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç"),
                                Button.danger("kick:" + member.getId() + ":" + voiceChannel.getId(), "‚õî –ö–∏–∫–Ω—É—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"),
                                Button.primary("closeVoice:" + ownerId + ":" + voiceId, "üîí –ó–∞–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª")
                        )).queue();
                    },
                    error -> event.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø: " + error.getMessage()).setEphemeral(true).queue()
            );
        }

        if (event.getButton().getId().startsWith("kick:")) {
            String[] parts = event.getButton().getId().split(":");
            String ownerId = parts[1]; // ID —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã
            String voiceId = parts[2]; // ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            Member member = event.getMember();
            Guild guild = event.getGuild();

            if (member == null || guild == null) return;

            if (!member.getId().equals(ownerId)) {
                event.reply("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –º–æ–∂–µ—Ç –∫–∏–∫–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.").setEphemeral(true).queue();
                return;
            }

            VoiceChannel voiceChannel = guild.getVoiceChannelById(voiceId);
            if (voiceChannel == null) {
                event.reply("‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.").setEphemeral(true).queue();
                return;
            }

            java.util.List<Member> membersInVoice = voiceChannel.getMembers();

            if (membersInVoice.size() <= 1) {
                event.reply("üë§ –í –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç.").setEphemeral(true).queue();
                return;
            }

            List<SelectOption> options = new ArrayList<>();

            for (Member m : membersInVoice) {
                if (!m.getId().equals(ownerId)) { // –ù–µ –≤–∫–ª—é—á–∞–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
                    options.add(SelectOption.of(m.getEffectiveName(), "kickuser:" + ownerId + ":" + m.getId() + ":" + voiceId)
                            .withDescription("–í—ã–≥–Ω–∞—Ç—å " + m.getEffectiveName())); // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                }
            }

            String selectId = "kick-select:" + ownerId + ":" + voiceId;

            event.reply("üîΩ **–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –∫–∏–∫–∞**:")
                    .setEphemeral(true)
                    .addActionRow(StringSelectMenu.create(selectId)
                            .setPlaceholder("–í—ã–±–µ—Ä–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞...")
                            .addOptions(options)
                            .build())
                    .queue();
        }

        if (event.getButton().getId().startsWith("name:")) {
            String[] parts = event.getButton().getId().split(":");
            String memberId = parts[1]; // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∏–∫–µ—Ç–∞ –∏–∑ –∏–º–µ–Ω–∏
            String voiceId = parts[2]; // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞
            Member member = event.getMember();

            assert member != null;
            if (member.getId().equals(memberId)) {
                TextInput DescriptionInput = TextInput.create("voiceName", "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è –¥–ª—è –∫–∞–Ω–∞–ª–∞", TextInputStyle.SHORT)
                        .setPlaceholder("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ...")
                        .setMinLength(1)
                        .setMaxLength(20)
                        .build();
                Modal voiceNameGive = Modal.create("changeNameModal:" + memberId + ":" + voiceId, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞")
                        .addComponents(ActionRow.of(DescriptionInput))
                        .build();
                event.replyModal(voiceNameGive).queue();
            } else {
                event.reply("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.").setEphemeral(true).queue();
            }
        }
        if (event.getButton().getId().startsWith("limit:")) {
            String[] parts = event.getButton().getId().split(":");
            String memberId = parts[1]; // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∏–∫–µ—Ç–∞ –∏–∑ –∏–º–µ–Ω–∏
            String voiceId = parts[2]; // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞
            Member member = event.getMember();

            assert member != null;
            if (member.getId().equals(memberId)) {
                TextInput DescriptionInput = TextInput.create("voiceLimit", "–£–∫–∞–∂–∏—Ç–µ –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", TextInputStyle.SHORT)
                        .setPlaceholder("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
                        .setMinLength(1)
                        .setMaxLength(20)
                        .build();
                Modal voiceLimitGive = Modal.create("changeLimitModal:" + memberId + ":" + voiceId, "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                        .addComponents(ActionRow.of(DescriptionInput))
                        .build();
                event.replyModal(voiceLimitGive).queue();
            } else {
                event.reply("‚ùå –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å –ª–∏–º–∏—Ç.").setEphemeral(true).queue();
            }
        }
    }

    @Override
    public void onModalInteraction(ModalInteractionEvent event) {
        if (event.getModalId().startsWith("changeLimitModal:")) {
            Guild guild = event.getGuild();
            ModalMapping type = event.getValue("voiceLimit");
            String[] parts = event.getModalId().split(":");
            String voiceId = parts[2];
            assert type != null;
            String type2 = type.getAsString();
            assert guild != null;
            int range = 2;

            VoiceChannel voiceChannel = guild.getVoiceChannelById(voiceId);
            assert voiceChannel != null;

            try {
                range = Integer.parseInt(type2);
            } catch (Exception e) {
                logger.error("–ß—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫");
                voiceChannel.getManager().setUserLimit(2).queue(
                        success -> event.reply("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –õ–∏–º–∏—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ " + 2).setEphemeral(true).queue(),
                        error -> event.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç: " + error.getMessage()).setEphemeral(true).queue()
                );
                return;
            }

            int finalRange = range;

            if (finalRange > 99) {
                event.reply("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ–ª—å—à–µ 99").setEphemeral(true).queue();
                return;
            }

            voiceChannel.getManager().setUserLimit(range).queue(
                    success -> event.reply("‚úÖ –õ–∏–º–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ " + finalRange).setEphemeral(true).queue(),
                    error -> event.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç: " + error.getMessage()).setEphemeral(true).queue()
            );
        }
        if (event.getModalId().startsWith("changeNameModal:")) {
            Guild guild = event.getGuild();
            ModalMapping type = event.getValue("voiceName");
            String[] parts = event.getModalId().split(":");
            String voiceId = parts[2];

            try {
                assert guild != null;
                VoiceChannel voiceChannel = guild.getVoiceChannelById(voiceId);
                assert type != null;
                assert voiceChannel != null;
                voiceChannel.getManager().setName(type.getAsString()).queue(
                        success -> event.reply("‚úÖ –ò–º—è –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ **" + type.getAsString() + "**").setEphemeral(true).queue(),
                        error -> event.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è: " + error.getMessage()).setEphemeral(true).queue()
                );
            } catch (Exception e) {
                logger.error("–ß—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫");
            }
        }
    }
}