package org.Psyholog.Ticket;

import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.Permission;
import net.dv8tion.jda.api.entities.Guild;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.Message;
import net.dv8tion.jda.api.entities.Role;
import net.dv8tion.jda.api.entities.channel.concrete.TextChannel;
import net.dv8tion.jda.api.events.interaction.component.ButtonInteractionEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;
import net.dv8tion.jda.api.interactions.components.ActionRow;
import net.dv8tion.jda.api.interactions.components.buttons.Button;

import java.awt.*;
import java.util.EnumSet;
import java.util.concurrent.TimeUnit;

import static org.Psyholog.Ticket.CreateTicket.scheduler;

public class ReTakeButtonInteract extends ListenerAdapter {
    @Override
    public void onButtonInteraction(ButtonInteractionEvent event) {
        if (event.getButton().getId().startsWith("re-ticket:")) {
            String[] parts = event.getButton().getId().split(":");
            String ticketIdName = parts[1]; // –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–∏–∫–µ—Ç–∞ –∏–∑ –∏–º–µ–Ω–∏
            String ticketId = parts[2]; // –ò–∑–≤–ª–µ–∫–∞–µ–º –∞–π–¥–∏ –∫–∞–Ω–∞–ª–∞

            Member member = event.getMember();
            Guild guild = event.getGuild();
            TextChannel mainChanel = guild.getTextChannelById(ticketId);
            if(mainChanel == null){
                event.reply("–û—à–∏–±–∫–∞: —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.").setEphemeral(true).queue();
                return;
            }

            Role psyhologRole = guild.getRoleById(CreateTicket.psyhologRole);
            Member pshyholog = guild.getMemberById(DataStorage.getInstance().getTicketPsychologists().get(ticketIdName));
            if(pshyholog == null){
                event.reply("–û—à–∏–±–∫–∞: –ø—Å–∏—Ö–æ–ª–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω.").setEphemeral(true).queue();
                return;
            }
            System.out.println(pshyholog);
            if(psyhologRole == null){
                event.reply("–û—à–∏–±–∫–∞: —Ä–æ–ª—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.").setEphemeral(true).queue();
                return;
            }

            Message message = event.getMessage();
            scheduler.schedule(() -> {
                message.delete().queue();
            }, 10, TimeUnit.MINUTES);

            if (member.getRoles().contains(psyhologRole)) {
                String newChannelName = "ticket-" + ticketIdName + "-" + member.getEffectiveName();
                mainChanel.getManager().setName(newChannelName).queue(
                        success -> {
                            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —Ç–∏–∫–µ—Ç –≤–∑—è—Ç
                            event.editComponents(
                                    ActionRow.of(
                                            Button.danger("taken-reticket", "–í–∑—è–ª: " + member.getEffectiveName()).asDisabled() // –ò–∑–º–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –∫—Ä–∞—Å–Ω—É—é –∏ –æ—Ç–∫–ª—é—á–∞–µ–º –µ—ë
                                    )
                            ).queue();
                        },
                        error -> event.reply("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –∫–∞–Ω–∞–ª–∞: " + error.getMessage()).setEphemeral(true).queue()
                );

                mainChanel.upsertPermissionOverride(pshyholog)
                                .setDenied(EnumSet.of(Permission.VIEW_CHANNEL))
                                        .queue(success -> System.out.println("–ü—Ä–∞–≤–∞ —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç—ã."),
                                                error -> System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∞–≤: " + error.getMessage()));

                DataStorage.getInstance().getTicketPsychologists().remove(ticketIdName);
                DataStorage.getInstance().saveData(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
                DataStorage.getInstance().getTicketPsychologists().put(ticketIdName, member.getId());
                DataStorage.getInstance().saveData(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª

                mainChanel.upsertPermissionOverride(member)
                        .setAllowed(EnumSet.of(Permission.VIEW_CHANNEL, Permission.MESSAGE_SEND))
                        .queue(
                                success -> System.out.println("–ü—Ä–∞–≤–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã."),
                                error -> System.err.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∞–≤: " + error.getMessage())
                        );

                EmbedBuilder embedBuilder = new EmbedBuilder()
                        .setTitle("‚ú® –£ –≤–∞—Å –Ω–æ–≤—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥! ‚ú®")
                        .setColor(Color.DARK_GRAY)
                        .setThumbnail(member.getAvatarUrl())
                        .setDescription("–í–∞—à –Ω–æ–≤—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥ –±—É–¥–µ—Ç —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º.")
                        .addField("üë§ –ù–æ–≤—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥", member.getAsMention(), false)
                        .addField("üïí –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã", "9:00 - 22:00 –ø–æ –ú–°–ö", false)
                        .setFooter("–ë—É–¥—å—Ç–µ —É–≤–µ—Ä–µ–Ω—ã, –º—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å!")
                        .setTimestamp(java.time.Instant.now());

                mainChanel.sendMessageEmbeds(embedBuilder.build()).queue();
                System.out.println("–ü—Å–∏—Ö–æ–ª–æ–≥ " + member.getEffectiveName() + " —Ö–æ—á–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞!");
            }
            else event.reply("–û—à–∏–±–∫–∞. —É –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤").setEphemeral(true).queue();
        }
    }
}
